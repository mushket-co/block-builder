/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–ª–æ–∫–æ–≤ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ JS
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BlockBuilder –±–µ–∑ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤
 * ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π ES –º–æ–¥—É–ª–∏ —Å Vite
 * ‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π Swiper –∏–∑ npm
 */

import Swiper from 'swiper'
import { Navigation, Pagination, Autoplay } from 'swiper/modules'
import 'swiper/css'
import 'swiper/css/navigation'
import 'swiper/css/pagination'

export const blockConfigs = {
  richText: {
    title: 'Rich Text (—Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º)',
    icon: '‚úçÔ∏è',
    description: '–ë–ª–æ–∫ —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º Jodit –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="rich-text-block">
          <div class="container">
            <div style="
              font-size: ${props.fontSize || 16}px;
              color: ${props.textColor || '#333333'};
              text-align: ${props.textAlign || 'left'};
              padding: 15px;
              border: 1px solid #eee;
              border-radius: 4px;
              background-color: #fff;
            ">
              ${props.content || '<p>–ù–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ</p>'}
            </div>
          </div>
        </div>
      `
    },
    fields: [
      {
        field: 'content',
        label: '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ',
        type: 'custom', // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–∏–ø –ø–æ–ª—è
        customFieldConfig: {
          rendererId: 'wysiwyg-editor', // ID –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–µ—Ä–∞
          options: {
            mode: 'default' // –û–ø—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
          }
        },
        rules: [
          { type: 'required', message: '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }
        ],
        defaultValue: '<p>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å...</p>'
      },
      {
        field: 'fontSize',
        label: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞',
        type: 'number',
        rules: [
          { type: 'min', value: 12, message: '–ú–∏–Ω–∏–º—É–º: 12px' },
          { type: 'max', value: 32, message: '–ú–∞–∫—Å–∏–º—É–º: 32px' }
        ],
        defaultValue: 16
      },
      {
        field: 'textColor',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        defaultValue: '#333333'
      },
      {
        field: 'textAlign',
        label: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ',
        type: 'select',
        options: [
          { value: 'left', label: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'center', label: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
          { value: 'right', label: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'justify', label: '–ü–æ —à–∏—Ä–∏–Ω–µ' }
        ],
        defaultValue: 'left'
      }
    ]
  },

  spacedText: {
    title: '–¢–µ–∫—Å—Ç —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏',
    icon: 'üìê',
    description: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—Ç—Å—Ç—É–ø–∞–º–∏',
    render: {
      kind: 'html',
      template: (props) => {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è padding (–æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –Ω–∞ .block-builder-block)
        // margin –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫ .block-builder-block
        return `
          <div class="spaced-text-block">
            <div class="container">
              <div style="
                padding-top: var(--spacing-padding-top, 0px);
                padding-bottom: var(--spacing-padding-bottom, 0px);
                text-align: ${props.textAlign};
                font-size: ${props.fontSize}px;
                color: ${props.color};
                background: ${props.backgroundColor};
                border-radius: 8px;
                transition: all 0.3s ease;
              " >
                ${props.content}
              </div>
            </div>
          </div>
        `
      }
    },
    fields: [
      {
        field: 'content',
        label: '–¢–µ–∫—Å—Ç',
        type: 'textarea',
        placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...',
        rules: [
          { type: 'required', message: '–¢–µ–∫—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }
        ],
        defaultValue: '–¢–µ–∫—Å—Ç —Å —É–ø—Ä–∞–≤–ª—è–µ–º—ã–º–∏ –æ—Ç—Å—Ç—É–ø–∞–º–∏'
      },
      {
        field: 'fontSize',
        label: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞',
        type: 'number',
        rules: [
          { type: 'min', value: 12, message: '–ú–∏–Ω–∏–º—É–º: 12px' },
          { type: 'max', value: 48, message: '–ú–∞–∫—Å–∏–º—É–º: 48px' }
        ],
        defaultValue: 18
      },
      {
        field: 'color',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        defaultValue: '#333333'
      },
      {
        field: 'backgroundColor',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞',
        type: 'color',
        defaultValue: '#f8f9fa'
      },
      {
        field: 'textAlign',
        label: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ',
        type: 'select',
        options: [
          { value: 'left', label: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'center', label: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
          { value: 'right', label: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' }
        ],
        defaultValue: 'center'
      }
    ],
    // üß™ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –±—Ä–µ–∫–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–∞–∫ –∂–µ –∫–∞–∫ –≤–æ Vue –ø—Ä–∏–º–µ—Ä–µ)
    spacingOptions: {
      config: {
        min: 0,
        max: 120,
        step: 8,
        // –ö–∞—Å—Ç–æ–º–Ω—ã–µ –±—Ä–µ–∫–ø–æ–∏–Ω—Ç—ã (–∫–æ–≥–¥–∞ —É–∫–∞–∑–∞–Ω—ã, –∑–∞–º–µ–Ω—è—é—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ)
        breakpoints: [
          { name: 'xlarge', label: 'XL (Desktop)', maxWidth: undefined }, // Desktop –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
          { name: 'large', label: 'L (Laptop)', maxWidth: 1440 },
          { name: 'medium', label: 'M (Tablet)', maxWidth: 1024 },
          { name: 'small', label: 'S (Mobile)', maxWidth: 640 }
        ]
      }
    }
  },

  text: {
    title: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫',
    icon: 'üìù',
    description: '–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="text-block">
          <div class="container">
            <div style="
              text-align: ${props.textAlign};
              font-size: ${props.fontSize}px;
              color: ${props.color};
              padding: 10px;
              border: 1px solid #e9ecef;
              border-radius: 4px;
              background: #f8f9fa;
              transition: all 0.2s ease;
            " onmouseover="this.style.boxShadow='0 2px 8px rgba(0,0,0,0.1)'" onmouseout="this.style.boxShadow='none'">
              ${props.content}
            </div>
          </div>
        </div>
      `
    },
    fields: [
      {
        field: 'content',
        label: '–¢–µ–∫—Å—Ç',
        type: 'textarea',
        placeholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç...',
        rules: [
          { type: 'required', message: '–¢–µ–∫—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
          { type: 'minLength', value: 1, message: '–¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' }
        ],
        defaultValue: '–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞'
      },
      {
        field: 'fontSize',
        label: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞',
        type: 'number',
        rules: [
          { type: 'required', message: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
          { type: 'min', value: 8, message: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 8px' },
          { type: 'max', value: 72, message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 72px' }
        ],
        defaultValue: 16
      },
      {
        field: 'color',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        rules: [{ type: 'required', message: '–¶–≤–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '#333333'
      },
      {
        field: 'textAlign',
        label: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ',
        type: 'select',
        options: [
          { value: 'left', label: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'center', label: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
          { value: 'right', label: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' }
        ],
        rules: [{ type: 'required', message: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }],
        defaultValue: 'left'
      }
    ]
  },

  image: {
    title: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    icon: 'üñºÔ∏è',
    description: '–î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="image-block" style="text-align: center; margin: 20px 0;">
          <div class="container">
            <img
              src="${props.src}"
              alt="${props.alt}"
              style="
                border-radius: ${props.borderRadius}px;
                max-width: 100%;
                height: auto;
                object-fit: cover;
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
                transition: transform 0.3s ease;
              "
              onmouseover="this.style.transform='scale(1.02)'"
              onmouseout="this.style.transform='scale(1)'"
            />
          </div>
        </div>
      `
    },
    fields: [
      {
        field: 'src',
        label: 'URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
        type: 'text',
        placeholder: 'https://example.com/image.jpg',
        rules: [
          { type: 'required', message: 'URL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }
        ],
        defaultValue: '/1.jpeg'
      },
      {
        field: 'alt',
        label: '–û–ø–∏—Å–∞–Ω–∏–µ',
        type: 'text',
        placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
        defaultValue: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
      },
      {
        field: 'borderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 8
      }
    ]
  },

  button: {
    title: '–ö–Ω–æ–ø–∫–∞',
    icon: 'üîò',
    description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="button-block" style="text-align: center; margin: 20px 0;">
          <div class="container">
            <button
              class="custom-button"
              style="
                background-color: ${props.backgroundColor};
                color: ${props.color};
                border-radius: ${props.borderRadius}px;
                padding: ${props.padding};
                border: none;
                cursor: pointer;
                font-size: 16px;
                font-weight: 500;
                transition: all 0.2s ease;
              "
              onclick="console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞: ${props.text.replace(/'/g, "\\'")}'); this.textContent='–ó–∞–≥—Ä—É–∑–∫–∞...'; setTimeout(() => this.textContent='${props.text.replace(/'/g, "\\'")}', 1000)"
              onmouseover="this.style.transform='scale(1.05)'; this.style.filter='brightness(1.1)'"
              onmouseout="this.style.transform='scale(1)'; this.style.filter='brightness(1)'"
            >
              ${props.text}
            </button>
          </div>
        </div>
      `
    },
    fields: [
      {
        field: 'text',
        label: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
        type: 'text',
        placeholder: '–ù–∞–∂–º–∏ –º–µ–Ω—è',
        rules: [
          { type: 'required', message: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
          { type: 'minLength', value: 1, message: '–¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' }
        ],
        defaultValue: '–ù–∞–∂–º–∏ –º–µ–Ω—è'
      },
      {
        field: 'backgroundColor',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞',
        type: 'color',
        rules: [{ type: 'required', message: '–¶–≤–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '#007bff'
      },
      {
        field: 'color',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        rules: [{ type: 'required', message: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '#ffffff'
      },
      {
        field: 'borderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 4
      },
      {
        field: 'padding',
        label: '–û—Ç—Å—Ç—É–ø—ã',
        type: 'text',
        placeholder: '8px 16px',
        rules: [{ type: 'required', message: '–û—Ç—Å—Ç—É–ø—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' }],
        defaultValue: '8px 16px'
      }
    ]
  },

  gallerySlider: {
    title: '–°–ª–∞–π–¥–µ—Ä –≥–∞–ª–µ—Ä–µ–∏',
    icon: 'üé†',
    description: '‚úÖ –ù–ê–°–¢–û–Ø–©–ò–ô Swiper –∏–∑ npm! (—Ç–æ–ª—å–∫–æ —Å Vite —Å–±–æ—Ä–∫–æ–π)',
    render: {
      kind: 'custom',
      // –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å –∏–º–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–º Swiper
      mount: (container, props) => {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
        const sliderId = `swiper-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`

        // ‚úÖ –ù–û–í–´–ô –ø–æ–¥—Ö–æ–¥: –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—Å—Å–∏–≤ slides –∏–∑ props
        const slides = (props.slides || []).filter(slide => slide.url && slide.title)

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        const autoplayValue = typeof props.autoplay === 'string'
          ? (props.autoplay === 'on' || props.autoplay === 'true')
          : props.autoplay
        const autoplayDelay = typeof props.autoplayDelay === 'string'
          ? parseInt(props.autoplayDelay, 10)
          : props.autoplayDelay
        const loopValue = typeof props.loop === 'string'
          ? (props.loop === 'on' || props.loop === 'true')
          : props.loop
        const spaceBetween = typeof props.spaceBetween === 'string'
          ? parseInt(props.spaceBetween, 10)
          : props.spaceBetween

        // –°–æ–∑–¥–∞–µ–º HTML
        container.innerHTML = `
          <div class="gallery-slider-block" style="padding: 20px; background: #f8f9fa; border-radius: 8px;">
            <div class="container">
              <div>
                ${props.title ? `<h2 style="text-align: center; margin-bottom: 30px; font-size: 28px; font-weight: 700; color: #333;">${props.title}</h2>` : ''}

                <div class="swiper" id="${sliderId}" style="width: 100%; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
                  <div class="swiper-wrapper">
                    ${slides.map(slide => `
                      <div class="swiper-slide">
                        <div style="position: relative; background: white;">
                          <img src="${slide.url}" alt="${slide.title}" style="width: 100%; height: 400px; object-fit: cover; display: block;" />
                          <div style="position: absolute; bottom: 0; left: 0; right: 0; background: linear-gradient(to top, rgba(0,0,0,0.8), transparent); padding: 30px 20px 20px; color: white;">
                            <h3 style="margin: 0 0 8px 0; font-size: 20px; font-weight: 600;">${slide.title}</h3>
                            <p style="margin: 0; font-size: 14px; opacity: 0.9;">${slide.description}</p>
                          </div>
                        </div>
                      </div>
                    `).join('')}
                  </div>

                  <div class="swiper-button-next"></div>
                  <div class="swiper-button-prev"></div>
                  <div class="swiper-pagination"></div>
                </div>
              </div>
            </div>
          </div>
        `

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
        setTimeout(() => {
          const swiperEl = container.querySelector(`#${sliderId}`)
          if (swiperEl) {
            new Swiper(swiperEl, {
              modules: [Navigation, Pagination, Autoplay],
              slidesPerView: 2,
              spaceBetween: spaceBetween,
              loop: loopValue,
              autoplay: autoplayValue ? {
                delay: autoplayDelay,
                disableOnInteraction: false
              } : false,
              pagination: {
                el: '.swiper-pagination',
                clickable: true,
                dynamicBullets: true
              },
              navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev'
              },
              grabCursor: true
            })
          }
        }, 0)
      }
    },
    fields: [
      {
        field: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–∞–ª–µ—Ä–µ–∏',
        type: 'text',
        placeholder: '–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
        defaultValue: '–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
      },
      // ‚úÖ –ù–û–í–´–ô –ø–æ–¥—Ö–æ–¥: –º–∞—Å—Å–∏–≤ —Å–ª–∞–π–¥–æ–≤ —á–µ—Ä–µ–∑ repeater
      {
        field: 'slides',
        label: '–°–ª–∞–π–¥—ã',
        type: 'repeater',
        rules: [
          { type: 'required', message: '–ù–µ–æ–±—Ö–æ–¥–∏–º —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ª–∞–π–¥' }
        ],
        defaultValue: [
          {
            url: '/qw.jpg',
            title: '–ü—Ä–∏—Ä–æ–¥–∞',
            description: '–ö—Ä–∞—Å–∏–≤—ã–π –ø–µ–π–∑–∞–∂ –ø—Ä–∏—Ä–æ–¥—ã'
          },
          {
            url: '/Edvard_Grieg.jpg',
            title: '–≠–¥–≤–∞—Ä–¥ –ì—Ä–∏–≥',
            description: '–ó–Ω–∞–º–µ–Ω–∏—Ç—ã–π –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä'
          },
          {
            url: '/bear.jpg',
            title: '–ú–µ–¥–≤–µ–¥—å',
            description: '–î–∏–∫–∞—è –ø—Ä–∏—Ä–æ–¥–∞'
          },
          {
            url: '/spanch.jpg',
            title: '–ì—É–±–∫–∞ –ë–æ–±',
            description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂'
          }
        ],
        repeaterConfig: {
          itemTitle: '–°–ª–∞–π–¥',
          addButtonText: '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–∞–π–¥',
          removeButtonText: '–£–¥–∞–ª–∏—Ç—å',
          min: 3, // ‚úÖ –†–ê–ë–û–¢–ê–ï–¢! —Ç.–∫. –µ—Å—Ç—å required –≤ rules (–º–∏–Ω–∏–º—É–º 3 —Å–ª–∞–π–¥–∞)
          max: 20,
          collapsible: true,
          fields: [
            {
              field: 'url',
              label: 'URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
              type: 'text',
              placeholder: '/–ø—É—Ç—å/–∫/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.jpg',
              rules: [{ type: 'required', message: 'URL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'title',
              label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
              type: 'text',
              placeholder: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∞–π–¥–∞',
              rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'description',
              label: '–û–ø–∏—Å–∞–Ω–∏–µ',
              type: 'textarea',
              placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∞–π–¥–∞',
              rules: [],
              defaultValue: ''
            }
          ]
        }
      },
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª–∞–π–¥–µ—Ä–∞
      {
        field: 'autoplay',
        label: '–ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞',
        type: 'checkbox',
        defaultValue: true
      },
      {
        field: 'autoplayDelay',
        label: '–ó–∞–¥–µ—Ä–∂–∫–∞ (–º—Å)',
        type: 'number',
        rules: [
          { type: 'min', value: 1000, message: '–ú–∏–Ω–∏–º—É–º: 1000–º—Å' },
          { type: 'max', value: 10000, message: '–ú–∞–∫—Å–∏–º—É–º: 10000–º—Å' }
        ],
        defaultValue: 3000
      },
      {
        field: 'loop',
        label: '–ó–∞—Ü–∏–∫–ª–∏—Ç—å',
        type: 'checkbox',
        defaultValue: true
      },
      {
        field: 'spaceBetween',
        label: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 100, message: '–ú–∞–∫—Å–∏–º—É–º: 100' }
        ],
        defaultValue: 30
      }
    ]
  },

  cardList: {
    title: '–°–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫',
    icon: 'üÉè',
    description: '–°–µ—Ç–∫–∞ –∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏',
    render: {
      kind: 'custom',
      mount: (container, props) => {
        const cards = (props.cards || []).filter(card => card.title && card.text);

        container.innerHTML = `
          <div class="card-list-block" style="padding: 40px 20px; background: #f8f9fa;">
            <div class="container">
              ${props.title ? `<h2 style="text-align: center; margin-bottom: 40px; font-size: 32px; font-weight: 700; color: #333;">${props.title}</h2>` : ''}

              <div class="cards-grid" style="
                display: grid;
                grid-template-columns: repeat(${props.columns || 3}, 1fr);
                gap: ${props.gap || 16}px;
                max-width: 1200px;
                margin: 0 auto;
              ">
              ${cards.map(card => `
                <div class="card" style="
                  background: ${props.cardBackground || '#ffffff'};
                  border-radius: ${props.cardBorderRadius || 8}px;
                  overflow: hidden;
                  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                  transition: all 0.3s ease;
                  cursor: pointer;
                  display: flex;
                  flex-direction: column;
                ">
                  ${card.image ? `
                    <div style="
                      width: 100%;
                      height: 200px;
                      overflow: hidden;
                      background: #e9ecef;
                    ">
                      <img
                        src="${card.image}"
                        alt="${card.title}"
                        style="width: 100%; height: 100%; object-fit: cover; display: block;"
                      />
                    </div>
                  ` : ''}

                  <div style="padding: 24px; flex: 1; display: flex; flex-direction: column;">
                    <h3 style="
                      margin: 0 0 12px 0;
                      font-size: 20px;
                      font-weight: 600;
                      color: ${props.cardTextColor || '#333333'};
                    ">${card.title}</h3>

                    <p style="
                      margin: 0 0 20px 0;
                      font-size: 14px;
                      line-height: 1.6;
                      color: ${props.cardTextColor || '#333333'};
                      opacity: 0.8;
                      flex: 1;
                    ">${card.text}</p>

                    ${card.button && card.link ? `
                      <a
                        href="${card.link}"
                        style="
                          display: inline-block;
                          padding: 10px 20px;
                          background: #007bff;
                          color: white;
                          text-decoration: none;
                          border-radius: 4px;
                          font-size: 14px;
                          font-weight: 500;
                          transition: background 0.2s ease;
                          text-align: center;
                        "
                        onmouseover="this.style.background='#0056b3'"
                        onmouseout="this.style.background='#007bff'"
                      >${card.button}</a>
                    ` : ''}
                  </div>
                </div>
              `).join('')}
              </div>
            </div>
          </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º hover —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        const cardElements = container.querySelectorAll('.card');
        cardElements.forEach(card => {
          card.addEventListener('mouseenter', () => {
            card.style.transform = 'translateY(-5px)';
            card.style.boxShadow = '0 8px 20px rgba(0,0,0,0.15)';
          });
          card.addEventListener('mouseleave', () => {
            card.style.transform = 'translateY(0)';
            card.style.boxShadow = '0 4px 12px rgba(0,0,0,0.1)';
          });
        });
      }
    },
    fields: [
      {
        field: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏',
        type: 'text',
        placeholder: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
        rules: [],
        defaultValue: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏'
      },
      // ‚úÖ –ú–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–æ—á–µ–∫ —á–µ—Ä–µ–∑ repeater
      {
        field: 'cards',
        label: '–ö–∞—Ä—Ç–æ—á–∫–∏',
        type: 'repeater',
        defaultValue: [
          {
            title: '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
            text: '–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
            button: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
            link: 'https://example.com',
            image: '/2.jpg'
          },
          {
            title: '–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            text: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è iOS –∏ Android',
            button: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
            link: 'https://example.com',
            image: '/spanch.jpg'
          },
          {
            title: '–î–∏–∑–∞–π–Ω',
            text: '–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞',
            button: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã',
            link: 'https://example.com',
            image: '/bear.jpg'
          }
        ],
        repeaterConfig: {
          itemTitle: '–ö–∞—Ä—Ç–æ—á–∫–∞',
          addButtonText: '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É',
          removeButtonText: '–£–¥–∞–ª–∏—Ç—å',
          min: 1, // ‚ö†Ô∏è –ò–ì–ù–û–†–ò–†–£–ï–¢–°–Ø! —Ç.–∫. –Ω–µ—Ç required –≤ rules (–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ)
          max: 12,
          collapsible: true,
          fields: [
            {
              field: 'title',
              label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
              type: 'text',
              placeholder: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏',
              rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'text',
              label: '–û–ø–∏—Å–∞–Ω–∏–µ',
              type: 'textarea',
              placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏',
              rules: [{ type: 'required', message: '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }],
              defaultValue: ''
            },
            {
              field: 'image',
              label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL)',
              type: 'text',
              placeholder: '/–ø—É—Ç—å/–∫/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.jpg',
              rules: [],
              defaultValue: '/2.jpg'
            },
            {
              field: 'button',
              label: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
              type: 'text',
              placeholder: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
              rules: [],
              defaultValue: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'
            },
            {
              field: 'link',
              label: '–°—Å—ã–ª–∫–∞',
              type: 'text',
              placeholder: 'https://example.com',
              rules: [],
              defaultValue: 'https://example.com'
            }
          ]
        }
      },
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      {
        field: 'cardBackground',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'color',
        rules: [],
        defaultValue: '#ffffff'
      },
      {
        field: 'cardTextColor',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'color',
        rules: [],
        defaultValue: '#333333'
      },
      {
        field: 'cardBorderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 8
      },
      {
        field: 'columns',
        label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫',
        type: 'select',
        options: [
          { value: 1, label: '1 –∫–æ–ª–æ–Ω–∫–∞' },
          { value: 2, label: '2 –∫–æ–ª–æ–Ω–∫–∏' },
          { value: 3, label: '3 –∫–æ–ª–æ–Ω–∫–∏' },
          { value: 4, label: '4 –∫–æ–ª–æ–Ω–∫–∏' }
        ],
        rules: [],
        defaultValue: 3
      },
      {
        field: 'gap',
        label: '–û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 16
      }
    ]
  },

  richCardList: {
    title: 'üéØ –ë–æ–≥–∞—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ (—Ç–µ—Å—Ç)',
    icon: 'üíé',
    description: '–¢–µ—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–π –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ –¥–ª—è pure JS',
    render: {
      kind: 'html',
      template: (props) => {
        const cards = props.cards || []

        const cardsHtml = cards.map(card => {
          const cardBg = card.backgroundColor || props.cardDefaultBg || '#ffffff'
          const cardTextColor = card.textColor || props.cardDefaultTextColor || '#333333'

          return `
            <div class="rich-card" style="
              background-color: ${cardBg};
              color: ${cardTextColor};
              border-radius: ${props.cardBorderRadius || 12}px;
              box-shadow: ${props.cardShadow || '0 4px 12px rgba(0, 0, 0, 0.1)'};
              overflow: hidden;
              transition: transform 0.3s ease, box-shadow 0.3s ease;
            ">
              ${card.image || card.imageMobile ? `
                <div style="
                  width: 100%;
                  height: 240px;
                  overflow: hidden;
                ">
                  <picture>
                    ${card.imageMobile ? `
                      <source srcset="${card.imageMobile}" media="(max-width: 768px)" />
                    ` : ''}
                    <img
                      src="${card.image || card.imageMobile}"
                      alt="${card.imageAlt || card.title || ''}"
                      style="
                        width: 100%;
                        height: 100%;
                        object-fit: cover;
                        transition: transform 0.3s ease;
                      "
                    />
                  </picture>
                </div>
              ` : ''}

              <div style="
                padding: 24px;
                display: flex;
                flex-direction: column;
                gap: 12px;
              ">
                ${card.title ? `
                  <h3 style="
                    margin: 0;
                    font-size: 24px;
                    font-weight: 700;
                    line-height: 1.3;
                  ">${card.title}</h3>
                ` : ''}

                ${card.subtitle ? `
                  <h4 style="
                    margin: 0;
                    font-size: 18px;
                    font-weight: 600;
                    line-height: 1.4;
                    opacity: 0.9;
                  ">${card.subtitle}</h4>
                ` : ''}

                ${card.text ? `
                  <p style="
                    margin: 0;
                    font-size: 16px;
                    line-height: 1.6;
                    opacity: 0.85;
                  ">${card.text}</p>
                ` : ''}

                ${card.detailedText ? `
                  <div style="
                    font-size: 14px;
                    line-height: 1.6;
                    opacity: 0.75;
                    margin-top: 8px;
                  ">${card.detailedText}</div>
                ` : ''}

                ${card.meetingPlace || card.meetingTime || card.participantsCount ? `
                  <div style="
                    display: flex;
                    flex-direction: column;
                    gap: 8px;
                    padding: 16px;
                    background-color: rgba(0, 0, 0, 0.03);
                    border-radius: 8px;
                    margin-top: 12px;
                  ">
                    ${card.meetingPlace ? `
                      <div style="
                        display: flex;
                        align-items: center;
                        gap: 8px;
                        font-size: 14px;
                      ">
                        <span style="font-weight: 600; white-space: nowrap;">üìç –ú–µ—Å—Ç–æ:</span>
                        <span style="opacity: 0.85;">${card.meetingPlace}</span>
                      </div>
                    ` : ''}
                    ${card.meetingTime ? `
                      <div style="
                        display: flex;
                        align-items: center;
                        gap: 8px;
                        font-size: 14px;
                      ">
                        <span style="font-weight: 600; white-space: nowrap;">üïê –í—Ä–µ–º—è:</span>
                        <span style="opacity: 0.85;">${card.meetingTime}</span>
                      </div>
                    ` : ''}
                    ${card.participantsCount ? `
                      <div style="
                        display: flex;
                        align-items: center;
                        gap: 8px;
                        font-size: 14px;
                      ">
                        <span style="font-weight: 600; white-space: nowrap;">üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</span>
                        <span style="opacity: 0.85;">${card.participantsCount}</span>
                      </div>
                    ` : ''}
                  </div>
                ` : ''}

                ${card.link && card.buttonText ? `
                  <a
                    href="${card.link}"
                    target="${card.linkTarget || '_self'}"
                    ${card.linkTarget === '_blank' ? 'rel="noopener noreferrer"' : ''}
                    style="
                      display: inline-flex;
                      align-items: center;
                      justify-content: center;
                      padding: 12px 24px;
                      text-decoration: none;
                      font-weight: 600;
                      font-size: 16px;
                      margin-top: auto;
                      background-color: ${props.buttonColor || '#667eea'};
                      color: ${props.buttonTextColor || '#ffffff'};
                      border-radius: ${props.buttonBorderRadius || 6}px;
                      transition: opacity 0.3s ease, transform 0.2s ease;
                      cursor: pointer;
                      align-self: flex-start;
                    "
                    onmouseover="this.style.opacity='0.9'; this.style.transform='translateX(4px)'"
                    onmouseout="this.style.opacity='1'; this.style.transform='translateX(0)'"
                  >${card.buttonText}</a>
                ` : ''}
              </div>
            </div>
          `
        }).join('')

        return `
          <div class="rich-card-list" style="
            width: 100%;
            padding: 20px;
          ">
            <div class="container">
              ${props.sectionTitle ? `
                <h2 style="
                  margin: 0 0 32px 0;
                  font-weight: 700;
                  line-height: 1.2;
                  color: ${props.titleColor || '#333333'};
                  font-size: ${props.titleSize || 32}px;
                  text-align: ${props.titleAlign || 'center'};
                ">${props.sectionTitle}</h2>
              ` : ''}

              <div style="
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(${props.cardMinWidth || 300}px, 1fr));
                gap: ${props.gap || 24}px;
                width: 100%;
            ">
                ${cardsHtml}
              </div>
            </div>
          </div>

          <style>
            .rich-card:hover {
              transform: translateY(-4px);
              box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15) !important;
            }

            @media (max-width: 768px) {
              .rich-card-list {
                padding: 16px !important;
              }

              .rich-card-list h2 {
                margin-bottom: 24px !important;
              }

              .rich-card > div:first-child {
                height: 200px !important;
              }

              .rich-card > div:last-child {
                padding: 20px !important;
                gap: 10px !important;
              }

              .rich-card h3 {
                font-size: 20px !important;
              }

              .rich-card h4 {
                font-size: 16px !important;
              }

              .rich-card p {
                font-size: 14px !important;
              }

              .rich-card > div:last-child > div {
                font-size: 13px !important;
              }
            }
          </style>
        `
      }
    },
    fields: [
      {
        field: 'sectionTitle',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏',
        type: 'text',
        placeholder: '–ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã',
        rules: [],
        defaultValue: '–ù–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã'
      },
      {
        field: 'titleColor',
        label: '–¶–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏',
        type: 'color',
        rules: [],
        defaultValue: '#333333'
      },
      {
        field: 'titleSize',
        label: '–†–∞–∑–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å–µ–∫—Ü–∏–∏ (px)',
        type: 'number',
        rules: [
          { type: 'min', value: 16, message: '–ú–∏–Ω–∏–º—É–º: 16px' },
          { type: 'max', value: 72, message: '–ú–∞–∫—Å–∏–º—É–º: 72px' }
        ],
        defaultValue: 32
      },
      {
        field: 'titleAlign',
        label: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞',
        type: 'select',
        options: [
          { value: 'left', label: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'center', label: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
          { value: 'right', label: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' }
        ],
        rules: [],
        defaultValue: 'center'
      },

      // –ö–∞—Ä—Ç–æ—á–∫–∏ —á–µ—Ä–µ–∑ repeater
      {
        field: 'cards',
        label: '–ö–∞—Ä—Ç–æ—á–∫–∏',
        type: 'repeater',
        defaultValue: [
          {
            title: '–ü—Ä–µ–º–∏—É–º –ø—Ä–æ–¥—É–∫—Ç',
            subtitle: '–õ—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ 2024',
            text: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç —Å –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
            detailedText: '–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–∞–ª–æ–≥–æ –∏ —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
            link: 'https://example.com/product-1',
            linkTarget: '_blank',
            buttonText: '–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ',
            image: '/1.jpeg',
            imageMobile: '/1.jpeg',
            imageAlt: '–ü—Ä–µ–º–∏—É–º –ø—Ä–æ–¥—É–∫—Ç',
            backgroundColor: '#ffffff',
            textColor: '#333333',
            meetingPlace: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª "–ê–ª—å—Ñ–∞", –ë–¶ "–°—Ç–æ–ª–∏—Ü–∞"',
            meetingTime: '15:00, 25 –æ–∫—Ç—è–±—Ä—è 2024',
            participantsCount: '50'
          },
          {
            title: '–°—Ç–∞–Ω–¥–∞—Ä—Ç –≤–µ—Ä—Å–∏—è',
            subtitle: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä',
            text: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á —Å –æ—Ç–ª–∏—á–Ω—ã–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º —Ü–µ–Ω—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞',
            detailedText: '–í–∫–ª—é—á–∞–µ—Ç –±–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã. –õ–µ–≥–∫–æ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ —Ä–æ—Å—Ç–µ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.',
            link: 'https://example.com/product-2',
            linkTarget: '_self',
            buttonText: '–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏',
            image: '/2.jpg',
            imageMobile: '/2.jpg',
            imageAlt: '–°—Ç–∞–Ω–¥–∞—Ä—Ç –≤–µ—Ä—Å–∏—è',
            backgroundColor: '#f8f9fa',
            textColor: '#212529',
            meetingPlace: '–û—Ñ–∏—Å –∫–æ–º–ø–∞–Ω–∏–∏, 3 —ç—Ç–∞–∂',
            meetingTime: '10:30, 26 –æ–∫—Ç—è–±—Ä—è 2024',
            participantsCount: '25'
          },
          {
            title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ',
            subtitle: '–î–ª—è –∫—Ä—É–ø–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
            text: '–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è',
            detailedText: '–ü–æ–ª–Ω–∞—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏, –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7.',
            link: 'https://example.com/product-3',
            linkTarget: '_blank',
            buttonText: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏',
            image: '/3.png',
            imageMobile: '/3.png',
            imageAlt: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ',
            backgroundColor: '#e7f3ff',
            textColor: '#004085',
            meetingPlace: '–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ "–ú–µ—Ç—Ä–æ–ø–æ–ª—å", –∑–∞–ª "–ü—Ä–µ–º—å–µ—Ä"',
            meetingTime: '14:00, 27 –æ–∫—Ç—è–±—Ä—è 2024',
            participantsCount: '100'
          }
        ],
        repeaterConfig: {
          itemTitle: '–ö–∞—Ä—Ç–æ—á–∫–∞',
          addButtonText: '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É',
          removeButtonText: '–£–¥–∞–ª–∏—Ç—å',
          min: 1,
          max: 20,
          collapsible: true,
          fields: [
            {
              field: 'title',
              label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
              type: 'text',
              placeholder: '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞',
              rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'subtitle',
              label: '–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫',
              type: 'text',
              placeholder: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
              rules: [],
              defaultValue: ''
            },
            {
              field: 'text',
              label: '–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç',
              type: 'textarea',
              placeholder: '–û—Å–Ω–æ–≤–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞...',
              rules: [{ type: 'required', message: '–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'detailedText',
              label: '–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
              type: 'textarea',
              placeholder: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –¥–µ—Ç–∞–ª—è–º–∏...',
              rules: [],
              defaultValue: ''
            },
            {
              field: 'link',
              label: '–°—Å—ã–ª–∫–∞',
              type: 'text',
              placeholder: 'https://example.com',
              rules: [
                { type: 'required', message: '–°—Å—ã–ª–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' },
                { type: 'pattern', value: '^https?://', message: '–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://' }
              ],
              defaultValue: 'https://example.com'
            },
            {
              field: 'linkTarget',
              label: '–û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–∫–∏',
              type: 'select',
              options: [
                { value: '_self', label: '–í —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ' },
                { value: '_blank', label: '–í –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ' }
              ],
              rules: [],
              defaultValue: '_blank'
            },
            {
              field: 'buttonText',
              label: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
              type: 'text',
              placeholder: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
              rules: [{ type: 'required', message: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'
            },
            {
              field: 'image',
              label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–¥–µ—Å–∫—Ç–æ–ø)',
              type: 'text',
              placeholder: '/–ø—É—Ç—å/–∫/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.jpg',
              rules: [],
              defaultValue: '/2.jpg'
            },
            {
              field: 'imageMobile',
              label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–º–æ–±–∏–ª—å–Ω–æ–µ)',
              type: 'text',
              placeholder: '/–ø—É—Ç—å/–∫/–º–æ–±–∏–ª—å–Ω–æ–º—É-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.jpg',
              rules: [],
              defaultValue: '/2.jpg'
            },
            {
              field: 'imageAlt',
              label: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
              type: 'text',
              placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏',
              rules: [],
              defaultValue: ''
            },
            {
              field: 'backgroundColor',
              label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏',
              type: 'color',
              rules: [],
              defaultValue: '#ffffff'
            },
            {
              field: 'textColor',
              label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏',
              type: 'color',
              rules: [],
              defaultValue: '#333333'
            },
            {
              field: 'meetingPlace',
              label: '–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏',
              type: 'text',
              placeholder: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª, –æ—Ñ–∏—Å...',
              rules: [{ type: 'required', message: '–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }],
              defaultValue: ''
            },
            {
              field: 'meetingTime',
              label: '–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏',
              type: 'text',
              placeholder: '15:00, 25 –æ–∫—Ç—è–±—Ä—è 2024',
              rules: [{ type: 'required', message: '–í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }],
              defaultValue: ''
            },
            {
              field: 'participantsCount',
              label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
              type: 'number',
              placeholder: '50',
              rules: [
                { type: 'required', message: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' },
                { type: 'min', value: 1, message: '–ú–∏–Ω–∏–º—É–º 1 —É—á–∞—Å—Ç–Ω–∏–∫' }
              ],
              defaultValue: ''
            }
          ]
        }
      },

      // –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      {
        field: 'cardMinWidth',
        label: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ (px)',
        type: 'number',
        rules: [
          { type: 'min', value: 200, message: '–ú–∏–Ω–∏–º—É–º: 200px' },
          { type: 'max', value: 600, message: '–ú–∞–∫—Å–∏–º—É–º: 600px' }
        ],
        defaultValue: 300
      },
      {
        field: 'gap',
        label: '–û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ (px)',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0px' },
          { type: 'max', value: 100, message: '–ú–∞–∫—Å–∏–º—É–º: 100px' }
        ],
        defaultValue: 24
      },
      {
        field: 'cardDefaultBg',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
        type: 'color',
        rules: [],
        defaultValue: '#ffffff'
      },
      {
        field: 'cardDefaultTextColor',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
        type: 'color',
        rules: [],
        defaultValue: '#333333'
      },
      {
        field: 'cardBorderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫ (px)',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0px' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50px' }
        ],
        defaultValue: 12
      },
      {
        field: 'cardShadow',
        label: '–¢–µ–Ω—å –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'select',
        options: [
          { value: 'none', label: '–ë–µ–∑ —Ç–µ–Ω–∏' },
          { value: '0 2px 8px rgba(0, 0, 0, 0.08)', label: '–õ–µ–≥–∫–∞—è' },
          { value: '0 4px 12px rgba(0, 0, 0, 0.1)', label: '–°—Ä–µ–¥–Ω—è—è' },
          { value: '0 8px 24px rgba(0, 0, 0, 0.15)', label: '–°–∏–ª—å–Ω–∞—è' }
        ],
        rules: [],
        defaultValue: '0 4px 12px rgba(0, 0, 0, 0.1)'
      },
      {
        field: 'buttonColor',
        label: '–¶–≤–µ—Ç –∫–Ω–æ–ø–æ–∫',
        type: 'color',
        rules: [],
        defaultValue: '#667eea'
      },
      {
        field: 'buttonTextColor',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫',
        type: 'color',
        rules: [],
        defaultValue: '#ffffff'
      },
      {
        field: 'buttonBorderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (px)',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0px' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50px' }
        ],
        defaultValue: 6
      }
    ],
    spacingOptions: {
      spacingTypes: ['margin-top', 'margin-bottom', 'padding-top', 'padding-bottom'],
      config: {
        min: 0,
        max: 120,
        step: 8
      }
    }
  },

  // ‚úÖ –ü–†–ò–ú–ï–†: –ë–ª–æ–∫ —Å API Select
  newsList: {
    title: 'üì∞ –°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ API',
    icon: 'üì∞',
    description: '–ë–ª–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π, –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API',
    render: {
      kind: 'html',
      template: (props) => {
        const featuredNewsId = props.featuredNewsId || null;
        const newsIds = Array.isArray(props.newsIds) ? props.newsIds : [];

        return `
          <div class="news-list-block" style="
            background-color: ${props.backgroundColor || '#f8f9fa'};
            color: ${props.textColor || '#333333'};
            padding: 20px;
            border-radius: 8px;
          ">
            <div class="container">
              <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
              <h2 style="margin: 0 0 20px 0; font-size: 24px; font-weight: bold;">
                ${props.title || '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏'}
              </h2>

            ${featuredNewsId ? `
              <!-- –ì–ª–∞–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å -->
              <div style="
                background: rgba(102, 126, 234, 0.1);
                border: 2px solid #667eea;
                border-radius: 8px;
                padding: 20px;
                margin-bottom: 20px;
              ">
                <h3 style="margin: 0 0 10px 0; color: #667eea;">
                  üåü –ì–ª–∞–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å (ID: ${featuredNewsId})
                </h3>
                <p style="margin: 0; opacity: 0.7; font-size: 14px;">
                  –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥—É—Ç –¥–∞–Ω–Ω—ã–µ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–æ API
                </p>
              </div>
            ` : ''}

            ${newsIds.length > 0 ? `
              <!-- –°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π -->
              <div style="
                display: grid;
                grid-template-columns: repeat(${props.columns || '2'}, 1fr);
                gap: 16px;
                margin-top: 20px;
              ">
                ${newsIds.map(id => `
                  <div style="
                    background: white;
                    border: 1px solid #e0e0e0;
                    border-radius: 8px;
                    padding: 16px;
                    transition: all 0.2s;
                  " class="news-card">
                    <h4 style="margin: 0 0 8px 0; font-size: 16px;">
                      –ù–æ–≤–æ—Å—Ç—å ID: ${id}
                    </h4>
                    ${props.showDate ? `
                      <p style="margin: 0; font-size: 12px; opacity: 0.6;">
                        ${new Date().toLocaleDateString('ru-RU')}
                      </p>
                    ` : ''}
                    <p style="margin: 8px 0 0 0; font-size: 14px; opacity: 0.8;">
                      –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –≤–∞—à–µ–≥–æ API –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                    </p>
                  </div>
                `).join('')}
              </div>
            ` : `
              <div style="
                text-align: center;
                padding: 40px 20px;
                opacity: 0.5;
              ">
                üìã –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–ª–æ–∫ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ.
              </div>
            `}
            </div>
          </div>

          <style>
            .news-card:hover {
              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
              transform: translateY(-2px);
            }
          </style>
        `;
      }
    },
    fields: [
      {
        field: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏',
        type: 'text',
        placeholder: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏',
        rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏'
      },
      // ‚úÖ –ü–†–ò–ú–ï–†: API-SELECT —Å –æ–¥–∏–Ω–æ—á–Ω—ã–º –≤—ã–±–æ—Ä–æ–º
      {
        field: 'featuredNewsId',
        label: '–ì–ª–∞–≤–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å',
        type: 'api-select',
        rules: [{ type: 'required', message: '–í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å' }],
        defaultValue: null,
        apiSelectConfig: {
          url: 'http://localhost:3002/api/news',
          method: 'GET',
          multiple: false, // –û–¥–∏–Ω–æ—á–Ω—ã–π –≤—ã–±–æ—Ä
          placeholder: '–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–∏...',
          limit: 10,
          debounceMs: 300,
          minSearchLength: 0,
          loadingText: '–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...',
          noResultsText: '–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
          errorText: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π'
        }
      },
      // ‚úÖ –ü–†–ò–ú–ï–†: API-SELECT —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º
      {
        field: 'newsIds',
        label: '–°–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è',
        type: 'api-select',
        rules: [
          { type: 'required', message: '–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –Ω–æ–≤–æ—Å—Ç—å' },
          { type: 'minLength', value: 2, message: '–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 –Ω–æ–≤–æ—Å—Ç–∏' }
        ],
        defaultValue: [],
        apiSelectConfig: {
          url: 'http://localhost:3002/api/news',
          method: 'GET',
          multiple: true, // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
          placeholder: '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç–∏...',
          limit: 10,
          debounceMs: 300,
          loadingText: '–ó–∞–≥—Ä—É–∑–∫–∞...',
          noResultsText: '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
          errorText: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏'
        }
      },
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      {
        field: 'showDate',
        label: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–∞—Ç—É',
        type: 'checkbox',
        rules: [],
        defaultValue: true
      },
      {
        field: 'columns',
        label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫',
        type: 'select',
        options: [
          { value: '1', label: '1 –∫–æ–ª–æ–Ω–∫–∞' },
          { value: '2', label: '2 –∫–æ–ª–æ–Ω–∫–∏' },
          { value: '3', label: '3 –∫–æ–ª–æ–Ω–∫–∏' }
        ],
        rules: [],
        defaultValue: '2'
      },
      {
        field: 'backgroundColor',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞',
        type: 'color',
        rules: [],
        defaultValue: '#f8f9fa'
      },
      {
        field: 'textColor',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        rules: [],
        defaultValue: '#333333'
      }
    ],
    spacingOptions: {
      spacingTypes: ['margin-top', 'margin-bottom', 'padding-top', 'padding-bottom'],
      config: {
        min: 0,
        max: 100,
        step: 4
      }
    }
  },

  timelapse: {
    title: '‚è±Ô∏è –¢–∞–π–º–ª–∞–ø—Å —Å —ç—Ç–∞–ø–∞–º–∏',
    icon: '‚è±Ô∏è',
    description: '–¢–∞–π–º–µ—Ä —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ —ç—Ç–∞–ø–∞–º–∏ –∏ –æ–±—Ä–∞—Ç–Ω—ã–º –æ—Ç—Å—á–µ—Ç–æ–º',
    render: {
      kind: 'custom',
      mount: (container, props) => {
        const stages = props.stages || []
        const blockId = `timelapse-${Math.random().toString(36).substr(2, 9)}`

        // –°–æ–∑–¥–∞–µ–º HTML
        container.innerHTML = `
          <div class="timelapse-block" id="${blockId}">
            <div class="container">
              ${props.title ? `<h2 class="timelapse-block__title">${props.title}</h2>` : ''}

              <div class="timelapse-block__content">
              <!-- –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å: —Å–ø–∏—Å–æ–∫ —ç—Ç–∞–ø–æ–≤ -->
              <div class="timelapse-block__stages" data-stages-container>
                ${stages.map((stage, index) => `
                  <div class="timelapse-block__stage" data-stage-index="${index}">
                    <div class="timelapse-block__stage-number">${index + 1}</div>
                    <div class="timelapse-block__stage-content">
                      <div class="timelapse-block__stage-name">${stage.name || '–≠—Ç–∞–ø ' + (index + 1)}</div>
                      <div class="timelapse-block__stage-duration">${stage.duration || 0} —Å–µ–∫</div>
                    </div>
                    <div class="timelapse-block__stage-check" style="display: none;">‚úì</div>
                  </div>
                `).join('')}
              </div>

              <!-- –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å: —Ç–∞–π–º–µ—Ä -->
              <div class="timelapse-block__timer-panel">
                <div class="timelapse-block__timer">
                  <div class="timelapse-block__timer-value" data-timer-value>00:00</div>
                  <div class="timelapse-block__timer-label">–¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç—Ç–∞–ø–∞</div>
                </div>

                <div class="timelapse-block__current-stage" data-current-stage>
                  <div class="timelapse-block__current-label">–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø:</div>
                  <div class="timelapse-block__current-name" data-current-name>–ù–∞–∂–º–∏—Ç–µ "–°—Ç–∞—Ä—Ç"</div>
                </div>

                <div class="timelapse-block__progress">
                  <div class="timelapse-block__progress-bar" data-progress-bar style="width: 0%"></div>
                </div>

                <div class="timelapse-block__controls">
                  <button class="timelapse-block__btn timelapse-block__btn--start" data-start-btn>–°—Ç–∞—Ä—Ç</button>
                  <button class="timelapse-block__btn timelapse-block__btn--pause" data-pause-btn style="display: none;">–ü–∞—É–∑–∞</button>
                  <button class="timelapse-block__btn timelapse-block__btn--reset" data-reset-btn>–°–±—Ä–æ—Å</button>
                </div>

                <div class="timelapse-block__completed" data-completed style="display: none;">
                  üéâ –í—Å–µ —ç—Ç–∞–ø—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!
                </div>
              </div>
              </div>
            </div>
          </div>

          <style>
            .timelapse-block {
              padding: 20px;
              background: #f5f5f5;
              border-radius: 12px;
            }

            .timelapse-block__title {
              margin: 0 0 24px 0;
              font-size: 28px;
              font-weight: 700;
              color: #333;
              text-align: center;
            }

            .timelapse-block__content {
              display: flex;
              gap: 30px;
              align-items: flex-start;
            }

            /* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å: —ç—Ç–∞–ø—ã */
            .timelapse-block__stages {
              flex: 1;
              display: flex;
              flex-direction: column;
              gap: 12px;
            }

            .timelapse-block__stage {
              display: flex;
              align-items: center;
              gap: 12px;
              padding: 16px;
              background: white;
              border-radius: 8px;
              border: 2px solid #e0e0e0;
              transition: all 0.3s ease;
            }

            .timelapse-block__stage--active {
              border-color: #4CAF50;
              background: #f1f8f4;
              box-shadow: 0 2px 8px rgba(76, 175, 80, 0.2);
            }

            .timelapse-block__stage--completed {
              border-color: #2196F3;
              background: #e3f2fd;
            }

            .timelapse-block__stage-number {
              display: flex;
              align-items: center;
              justify-content: center;
              width: 36px;
              height: 36px;
              background: #e0e0e0;
              border-radius: 50%;
              font-weight: 700;
              color: #666;
              flex-shrink: 0;
            }

            .timelapse-block__stage--active .timelapse-block__stage-number {
              background: #4CAF50;
              color: white;
            }

            .timelapse-block__stage--completed .timelapse-block__stage-number {
              background: #2196F3;
              color: white;
            }

            .timelapse-block__stage-content {
              flex: 1;
            }

            .timelapse-block__stage-name {
              font-size: 16px;
              font-weight: 600;
              color: #333;
              margin-bottom: 4px;
            }

            .timelapse-block__stage-duration {
              font-size: 13px;
              color: #666;
            }

            .timelapse-block__stage-check {
              font-size: 24px;
              color: #2196F3;
              flex-shrink: 0;
            }

            /* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å: —Ç–∞–π–º–µ—Ä */
            .timelapse-block__timer-panel {
              flex: 1;
              display: flex;
              flex-direction: column;
              gap: 20px;
              background: white;
              padding: 30px;
              border-radius: 12px;
              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }

            .timelapse-block__timer {
              text-align: center;
            }

            .timelapse-block__timer-value {
              font-size: 64px;
              font-weight: 700;
              color: #4CAF50;
              font-family: 'Courier New', monospace;
              letter-spacing: 4px;
            }

            .timelapse-block__timer-label {
              font-size: 14px;
              color: #666;
              margin-top: 8px;
            }

            .timelapse-block__current-stage {
              text-align: center;
              padding: 16px;
              background: #f5f5f5;
              border-radius: 8px;
            }

            .timelapse-block__current-label {
              font-size: 12px;
              color: #666;
              text-transform: uppercase;
              letter-spacing: 1px;
              margin-bottom: 8px;
            }

            .timelapse-block__current-name {
              font-size: 20px;
              font-weight: 600;
              color: #333;
            }

            .timelapse-block__progress {
              width: 100%;
              height: 8px;
              background: #e0e0e0;
              border-radius: 4px;
              overflow: hidden;
            }

            .timelapse-block__progress-bar {
              height: 100%;
              background: linear-gradient(90deg, #4CAF50 0%, #8BC34A 100%);
              transition: width 1s linear;
            }

            .timelapse-block__controls {
              display: flex;
              gap: 12px;
              justify-content: center;
            }

            .timelapse-block__btn {
              padding: 12px 24px;
              font-size: 16px;
              font-weight: 600;
              border: none;
              border-radius: 8px;
              cursor: pointer;
              transition: all 0.3s ease;
              min-width: 120px;
            }

            .timelapse-block__btn--start {
              background: #4CAF50;
              color: white;
            }

            .timelapse-block__btn--start:hover {
              background: #45a049;
              transform: translateY(-2px);
              box-shadow: 0 4px 8px rgba(76, 175, 80, 0.3);
            }

            .timelapse-block__btn--pause {
              background: #FF9800;
              color: white;
            }

            .timelapse-block__btn--pause:hover {
              background: #F57C00;
              transform: translateY(-2px);
              box-shadow: 0 4px 8px rgba(255, 152, 0, 0.3);
            }

            .timelapse-block__btn--reset {
              background: #f44336;
              color: white;
            }

            .timelapse-block__btn--reset:hover {
              background: #d32f2f;
              transform: translateY(-2px);
              box-shadow: 0 4px 8px rgba(244, 67, 54, 0.3);
            }

            .timelapse-block__completed {
              text-align: center;
              font-size: 24px;
              font-weight: 700;
              color: #4CAF50;
              padding: 20px;
              background: #f1f8f4;
              border-radius: 8px;
            }

            /* –ê–¥–∞–ø—Ç–∏–≤ */
            @media (max-width: 768px) {
              .timelapse-block__content {
                flex-direction: column;
              }

              .timelapse-block__timer-value {
                font-size: 48px;
              }

              .timelapse-block__controls {
                flex-direction: column;
              }

              .timelapse-block__btn {
                width: 100%;
              }
            }
          </style>
        `

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞ HTML
        setTimeout(() => {
          const blockEl = container.querySelector(`#${blockId}`)
          if (!blockEl) {
            console.error('Timelapse block not found')
            return
          }

          let currentStageIndex = 0
          let timeLeft = 0
          let isRunning = false
          let isCompleted = false
          let intervalId = null

          // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
          const timerValue = blockEl.querySelector('[data-timer-value]')
          const currentName = blockEl.querySelector('[data-current-name]')
          const progressBar = blockEl.querySelector('[data-progress-bar]')
          const startBtn = blockEl.querySelector('[data-start-btn]')
          const pauseBtn = blockEl.querySelector('[data-pause-btn]')
          const resetBtn = blockEl.querySelector('[data-reset-btn]')
          const completedMsg = blockEl.querySelector('[data-completed]')
          const stageElements = blockEl.querySelectorAll('[data-stage-index]')

          function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60)
            const secs = seconds % 60
            return String(minutes).padStart(2, '0') + ':' + String(secs).padStart(2, '0')
          }

          function updateUI() {
            if (!timerValue || !currentName || !progressBar) return

            timerValue.textContent = formatTime(timeLeft)

            if (stages[currentStageIndex]) {
              currentName.textContent = stages[currentStageIndex].name

              // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
              const elapsed = stages[currentStageIndex].duration - timeLeft
              const percentage = (elapsed / stages[currentStageIndex].duration) * 100
              progressBar.style.width = percentage + '%'
            } else {
              currentName.textContent = '–ù–∞–∂–º–∏—Ç–µ "–°—Ç–∞—Ä—Ç"'
              progressBar.style.width = '0%'
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç—Ç–∞–ø–æ–≤
            stageElements.forEach((el, index) => {
              el.classList.remove('timelapse-block__stage--active', 'timelapse-block__stage--completed')
              const check = el.querySelector('.timelapse-block__stage-check')

              if (index === currentStageIndex) {
                el.classList.add('timelapse-block__stage--active')
                if (check) check.style.display = 'none'
              } else if (index < currentStageIndex) {
                el.classList.add('timelapse-block__stage--completed')
                if (check) check.style.display = 'block'
              } else {
                if (check) check.style.display = 'none'
              }
            })
          }

          function start() {
            if (isCompleted) return

            isRunning = true
            if (startBtn) startBtn.style.display = 'none'
            if (pauseBtn) pauseBtn.style.display = 'inline-block'

            if (timeLeft === 0 && stages[currentStageIndex]) {
              timeLeft = stages[currentStageIndex].duration
            }

            intervalId = setInterval(() => {
              if (timeLeft > 0) {
                timeLeft--
                updateUI()
              } else {
                moveToNextStage()
              }
            }, 1000)
          }

          function pause() {
            isRunning = false
            if (startBtn) {
              startBtn.style.display = 'inline-block'
              startBtn.textContent = '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'
            }
            if (pauseBtn) pauseBtn.style.display = 'none'
            clearTimer()
          }

          function reset() {
            isRunning = false
            isCompleted = false
            currentStageIndex = 0
            timeLeft = stages[0] ? stages[0].duration : 0

            if (startBtn) {
              startBtn.style.display = 'inline-block'
              startBtn.textContent = '–°—Ç–∞—Ä—Ç'
            }
            if (pauseBtn) pauseBtn.style.display = 'none'
            if (completedMsg) completedMsg.style.display = 'none'

            clearTimer()
            updateUI()
          }

          function moveToNextStage() {
            if (currentStageIndex < stages.length - 1) {
              currentStageIndex++
              timeLeft = stages[currentStageIndex].duration
              updateUI()
            } else {
              isCompleted = true
              isRunning = false
              if (completedMsg) completedMsg.style.display = 'block'
              if (startBtn) startBtn.style.display = 'none'
              if (pauseBtn) pauseBtn.style.display = 'none'
              clearTimer()
            }
          }

          function clearTimer() {
            if (intervalId) {
              clearInterval(intervalId)
              intervalId = null
            }
          }

          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
          if (stages.length > 0) {
            timeLeft = stages[0].duration
          }
          updateUI()

          // –°–æ–±—ã—Ç–∏—è
          if (startBtn) startBtn.addEventListener('click', start)
          if (pauseBtn) pauseBtn.addEventListener('click', pause)
          if (resetBtn) resetBtn.addEventListener('click', reset)

          // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞
          blockEl.cleanup = clearTimer
        }, 0)
      }
    },
    fields: [
      {
        field: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
        type: 'text',
        placeholder: '–ü–ª–∞–Ω –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
        rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '–ü–ª–∞–Ω –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è'
      },
      {
        field: 'stages',
        label: '–≠—Ç–∞–ø—ã',
        type: 'repeater',
        rules: [
          { type: 'required', message: '–ù–µ–æ–±—Ö–æ–¥–∏–º —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç—Ç–∞–ø' }
        ],
        defaultValue: [
          {
            name: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
            duration: 300
          },
          {
            name: '–û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
            duration: 180
          },
          {
            name: '–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–∫–ª–∞–¥',
            duration: 600
          },
          {
            name: '–ü–µ—Ä–µ—Ä—ã–≤',
            duration: 120
          },
          {
            name: '–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã',
            duration: 300
          }
        ],
        repeaterConfig: {
          itemTitle: '–≠—Ç–∞–ø',
          addButtonText: '–î–æ–±–∞–≤–∏—Ç—å —ç—Ç–∞–ø',
          removeButtonText: '–£–¥–∞–ª–∏—Ç—å',
          min: 1,
          max: 20,
          collapsible: true,
          fields: [
            {
              field: 'name',
              label: '–ù–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞',
              type: 'text',
              placeholder: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞',
              rules: [
                { type: 'required', message: '–ù–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' },
                { type: 'minLength', value: 3, message: '–ú–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞' },
                { type: 'maxLength', value: 100, message: '–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤' }
              ],
              defaultValue: '–ù–æ–≤—ã–π —ç—Ç–∞–ø'
            },
            {
              field: 'duration',
              label: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—Å–µ–∫—É–Ω–¥—ã)',
              type: 'number',
              placeholder: '60',
              rules: [
                { type: 'required', message: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' },
                { type: 'min', value: 1, message: '–ú–∏–Ω–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥–∞' },
                { type: 'max', value: 7200, message: '–ú–∞–∫—Å–∏–º—É–º 7200 —Å–µ–∫—É–Ω–¥ (2 —á–∞—Å–∞)' }
              ],
              defaultValue: 60
            }
          ]
        }
      }
    ]
  }
}

